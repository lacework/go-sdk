version: 2.1

parameters:
  slack-mentions:
    type: string
    default: 'afiune,scottford'

orbs:
  lacework: lacework/lacework@1.0.0
  slack: circleci/slack@3.4.2
  jq: circleci/jq@2.1.0
  win: circleci/windows@2.2.0

executors:
  go-executor:
    docker:
      - image: circleci/golang:1.14
    working_directory: /go/src/github.com/lacework/go-sdk
  alpine:
    docker:
      - image: cibuilds/base:latest
    resource_class: small

jobs:
  unit-test:
    executor: go-executor
    steps:
      - checkout
      - run: make prepare
      - run: make lint
      - run: make test
      - run: make fmt-check
      - run: make imports-check
  build-cli:
    executor: go-executor
    steps:
      - checkout
      - run: make prepare
      - run: make build-cli-cross-platform
      - persist_to_workspace:
          root: bin
          paths:
            - lacework-cli-*
  integration-test-linux:
    executor: go-executor
    steps:
      - checkout
      - attach_workspace:
          at: bin
      - run: make integration-only
  integration-test-windows:
    executor: win/default
    steps:
      - checkout
      - attach_workspace:
          at: bin
      - run:
          command: |
            $env:LW_CLI_BIN = Join-Path (Get-Location).Path "bin\\lacework-cli-windows-amd64.exe"
            go test -v github.com/lacework/go-sdk/integration
    environment:
      GOFLAGS: -mod=vendor
  verify-release:
    executor: alpine
    steps:
      - checkout
      - run: scripts/release.sh verify
  trigger-release:
    executor: alpine
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "ac:42:17:fc:47:cb:cb:2a:e4:c3:c1:76:6c:73:b1:87"
      - run: scripts/release.sh trigger
  release:
    executor: go-executor
    steps:
      - checkout
      - jq/install
      - slack/notify:
          mentions: << pipeline.parameters.slack-mentions >>
          message: Releasing a new version of the go-sdk repository
      - run: make prepare
      - run: scripts/release.sh publish
      - setup_remote_docker
      - run: scripts/release_containers.sh
      - slack/status:
          fail_only: false
          mentions: << pipeline.parameters.slack-mentions >>
  vuln-scan-cli:
    executor: lacework/default
    parameters:
      tag:
        type: string
    steps:
      - lacework/vuln-scan-run:
          account: CI_ACCOUNT
          api-key: CI_API_KEY
          api-secret: CI_API_SECRET
          registry: index.docker.io
          repository: techallylw/lacework-cli
          tag: << parameters.tag >>

workflows:
  version: 2
  build_test_trigger-release:
    jobs:
      - unit-test
      - build-cli
      - integration-test-linux:
          requires:
            - build-cli
      - integration-test-windows:
          requires:
            - build-cli
      - trigger-release:
          requires:
            - unit-test
            - integration-test-windows
            - integration-test-linux
          filters:
            branches:
              only: master

  verify-release:
    jobs:
      - verify-release:
          filters:
             branches:
               only: release

  release-from-tag:
    jobs:
      - release:
          filters:
            tags:
               only: /^v.*/
            branches:
              ignore: /.*/
      - vuln-scan-cli:
          filters:
            tags:
               only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - release
          matrix:
            parameters:
              tag: ["ubi-8", "centos-8", "debian-10", "ubuntu-1804", "amazonlinux-2"]

  nightly:
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only: master
    jobs:
      - unit-test
      - build-cli
      - integration-test-linux:
          requires:
            - build-cli
      - integration-test-windows:
          requires:
            - build-cli
