package aws

type IntegrationType string

const (
	Agentless  IntegrationType = "aws_agentless"
	Config     IntegrationType = "aws_config"
	CloudTrail IntegrationType = "aws_cloudtrail"
)

var RequiredPermissions = map[IntegrationType][]string{
	Agentless: {
		"ec2:AssociateRouteTable",
		"ec2:AttachInternetGateway",
		"ec2:AuthorizeSecurityGroupEgress",
		"ec2:CreateInternetGateway",
		"ec2:CreateRoute",
		"ec2:CreateRouteTable",
		"ec2:CreateSecurityGroup",
		"ec2:CreateSubnet",
		"ec2:CreateTags",
		"ec2:CreateVpc",
		"ec2:DeleteInternetGateway",
		"ec2:DeleteRoute",
		"ec2:DeleteRouteTable",
		"ec2:DeleteSecurityGroup",
		"ec2:DeleteSubnet",
		"ec2:DeleteVpc",
		"ec2:DescribeInternetGateways",
		"ec2:DescribeNetworkAcls",
		"ec2:DescribeNetworkInterfaces",
		"ec2:DescribeRegions",
		"ec2:DescribeRouteTables",
		"ec2:DescribeSecurityGroupRules",
		"ec2:DescribeSecurityGroups",
		"ec2:DescribeSubnets",
		"ec2:DescribeVpcAttribute",
		"ec2:DescribeVpcClassicLink",
		"ec2:DescribeVpcClassicLinkDnsSupport",
		"ec2:DescribeVpcs",
		"ec2:DetachInternetGateway",
		"ec2:DisassociateRouteTable",
		"ec2:ModifyVpcAttribute",
		"ec2:RevokeSecurityGroupEgress",
		"ec2:RevokeSecurityGroupIngress",
		"ecs:CreateCluster",
		"ecs:DeleteCluster",
		"ecs:DeregisterTaskDefinition",
		"ecs:DescribeClusters",
		"ecs:DescribeTaskDefinition",
		"ecs:PutClusterCapacityProviders",
		"ecs:RegisterTaskDefinition",
		"events:DeleteRule",
		"events:DescribeRule",
		"events:ListTagsForResource",
		"events:ListTargetsByRule",
		"events:PutRule",
		"events:PutTargets",
		"events:RemoveTargets",
		"iam:AttachRolePolicy",
		"iam:CreatePolicy",
		"iam:CreateRole",
		"iam:DeletePolicy",
		"iam:DeleteRole",
		"iam:DeleteRolePolicy",
		"iam:DetachRolePolicy",
		"iam:GetPolicy",
		"iam:GetPolicyVersion",
		"iam:GetRole",
		"iam:GetRolePolicy",
		"iam:GetUserPolicy",
		"iam:ListAttachedRolePolicies",
		"iam:ListAttachedUserPolicies",
		"iam:ListGroupsForUser",
		"iam:ListInstanceProfilesForRole",
		"iam:ListPolicyVersions",
		"iam:ListRolePolicies",
		"iam:ListUserPolicies",
		"iam:PassRole",
		"iam:PutRolePolicy",
		"iam:TagRole",
		"logs:CreateLogGroup",
		"logs:DeleteLogGroup",
		"logs:DescribeLogGroups",
		"logs:ListTagsLogGroup",
		"logs:PutRetentionPolicy",
		"s3:CreateBucket",
		"s3:DeleteBucket",
		"s3:DeleteBucketPolicy",
		"s3:DeleteObject",
		"s3:DeleteObjectVersion",
		"s3:GetAccelerateConfiguration",
		"s3:GetBucketAcl",
		"s3:GetBucketCORS",
		"s3:GetBucketLogging",
		"s3:GetBucketObjectLockConfiguration",
		"s3:GetBucketOwnershipControls",
		"s3:GetBucketPolicy",
		"s3:GetBucketPublicAccessBlock",
		"s3:GetBucketRequestPayment",
		"s3:GetBucketTagging",
		"s3:GetBucketVersioning",
		"s3:GetBucketWebsite",
		"s3:GetEncryptionConfiguration",
		"s3:GetLifecycleConfiguration",
		"s3:GetReplicationConfiguration",
		"s3:ListBucket",
		"s3:ListBucketVersions",
		"s3:PutBucketOwnershipControls",
		"s3:PutBucketPolicy",
		"s3:PutBucketPublicAccessBlock",
		"s3:PutBucketTagging",
		"s3:PutBucketVersioning",
		"s3:PutEncryptionConfiguration",
		"s3:PutLifecycleConfiguration",
		"secretsmanager:CreateSecret",
		"secretsmanager:DeleteSecret",
		"secretsmanager:DescribeSecret",
		"secretsmanager:GetResourcePolicy",
		"secretsmanager:GetSecretValue",
		"secretsmanager:PutSecretValue",
		"servicequotas:GetServiceQuota",
	},
	Config: {
		"cloudformation:CreateStack",
		"cloudformation:CreateStackInstances",
		"cloudformation:CreateStackSet",
		"cloudformation:DeleteStack",
		"cloudformation:DeleteStackInstances",
		"cloudformation:DeleteStackSet",
		"cloudformation:DescribeStackEvents",
		"cloudformation:DescribeStackInstance",
		"cloudformation:DescribeStacks",
		"cloudformation:DescribeStackSet",
		"cloudformation:DescribeStackSetOperation",
		"cloudformation:GetTemplate",
		"cloudformation:ListStackInstances",
		"ec2:DescribeRegions",
		"iam:AttachRolePolicy",
		"iam:CreatePolicy",
		"iam:CreateRole",
		"iam:DeletePolicy",
		"iam:DeleteRole",
		"iam:DeleteRolePolicy",
		"iam:DetachRolePolicy",
		"iam:GetPolicy",
		"iam:GetPolicyVersion",
		"iam:GetRole",
		"iam:GetRolePolicy",
		"iam:GetUserPolicy",
		"iam:ListAttachedRolePolicies",
		"iam:ListAttachedUserPolicies",
		"iam:ListGroupsForUser",
		"iam:ListInstanceProfilesForRole",
		"iam:ListPolicyVersions",
		"iam:ListRolePolicies",
		"iam:ListUserPolicies",
		"iam:PassRole",
		"iam:PutRolePolicy",
		"iam:TagPolicy",
		"iam:TagRole",
		"kms:CancelKeyDeletion",
		"kms:CreateAlias",
		"kms:CreateCustomKeyStore",
		"kms:CreateGrant",
		"kms:CreateKey",
		"kms:DeleteAlias",
		"kms:DeleteCustomKeyStore",
		"kms:DeleteImportedKeyMaterial",
		"kms:DescribeCustomKeyStores",
		"kms:DescribeKey",
		"kms:DisableKey",
		"kms:DisableKeyRotation",
		"kms:EnableKey",
		"kms:EnableKeyRotation",
		"kms:GetKeyPolicy",
		"kms:GetKeyRotationStatus",
		"kms:GetParametersForImport",
		"kms:GetPublicKey",
		"kms:ListAliases",
		"kms:ListGrants",
		"kms:ListKeyPolicies",
		"kms:ListKeys",
		"kms:ListResourceTags",
		"kms:ListRetirableGrants",
		"kms:PutKeyPolicy",
		"kms:RevokeGrant",
		"kms:ScheduleKeyDeletion",
		"kms:TagResource",
		"kms:UpdateAlias",
		"kms:UpdateCustomKeyStore",
		"kms:UpdateKeyDescription",
		"kms:UpdatePrimaryRegion",
		"lambda:AddPermission",
		"lambda:CreateFunction",
		"lambda:DeleteFunction",
		"lambda:GetFunction",
		"lambda:GetFunctionCodeSigningConfig",
		"lambda:GetPolicy",
		"lambda:InvokeFunction",
		"lambda:ListVersionsByFunction",
		"lambda:Removepermission",
		"s3:CreateBucket",
		"s3:DeleteBucket",
		"s3:DeleteBucketPolicy",
		"s3:DeleteBucketWebsite",
		"s3:DeleteObject",
		"s3:DeleteObjectVersion",
		"s3:GetAccelerateConfiguration",
		"s3:GetAccessPoint",
		"s3:GetAccessPointConfigurationForObjectLambda",
		"s3:GetAccessPointForObjectLambda",
		"s3:GetAccessPointPolicy",
		"s3:GetAccessPointPolicyStatus",
		"s3:GetAccessPointPolicyStatusForObjectLambda",
		"s3:GetAccountPublicAccessBlock",
		"s3:GetAnalyticsConfiguration",
		"s3:GetBucketAcl",
		"s3:GetBucketCORS",
		"s3:GetBucketLocation",
		"s3:GetBucketLogging",
		"s3:GetBucketObjectLockConfiguration",
		"s3:GetBucketOwnershipControls",
		"s3:GetBucketPolicy",
		"s3:GetBucketPublicAccessBlock",
		"s3:GetBucketRequestPayment",
		"s3:GetBucketTagging",
		"s3:GetBucketVersioning",
		"s3:GetBucketWebsite",
		"s3:GetEncryptionConfiguration",
		"s3:GetIntelligentTieringConfiguration",
		"s3:GetInventoryConfiguration",
		"s3:GetJobTagging",
		"s3:GetLifecycleConfiguration",
		"s3:GetMetricsConfiguration",
		"s3:GetObject",
		"s3:GetObjectAcl",
		"s3:GetObjectLegalHold",
		"s3:GetObjectRetention",
		"s3:GetObjectTagging",
		"s3:GetObjectTorrent",
		"s3:GetObjectVersion",
		"s3:GetObjectVersionAcl",
		"s3:GetObjectVersionForReplication",
		"s3:GetObjectVersionTagging",
		"s3:GetObjectVersionTorrent",
		"s3:GetReplicationConfiguration",
		"s3:GetStorageLensConfiguration",
		"s3:GetStorageLensConfigurationTagging",
		"s3:GetStorageLensDashboard",
		"s3:ListAccessPoints",
		"s3:ListAccessPointsForObjectLambda",
		"s3:ListAllMyBuckets",
		"s3:ListBucket",
		"s3:ListBucketMultipartUploads",
		"s3:ListBucketVersions",
		"s3:ListJobs",
		"s3:ListMultipartUploadParts",
		"s3:ListStorageLensConfigurations",
		"s3:PutBucketAcl",
		"s3:PutBucketLogging",
		"s3:PutBucketNotification",
		"s3:PutBucketOwnershipControls",
		"s3:PutBucketPolicy",
		"s3:PutBucketPublicAccessBlock",
		"s3:PutBucketVersioning",
		"s3:PutEncryptionConfiguration",
		"secretsmanager:CreateSecret",
		"secretsmanager:DescribeSecret",
		"secretsmanager:GetResourcePolicy",
		"secretsmanager:GetSecretValue",
		"secretsmanager:PutSecretValue",
		"sns:CreateTopic",
		"sns:DeleteTopic",
		"sns:GetSubscriptionAttributes",
		"sns:GetTopicAttributes",
		"sns:ListTagsForResource",
		"sns:SetTopicAttributes",
		"sns:Subscribe",
		"sns:Unsubscribe",
	},
	CloudTrail: {
		"cloudtrail:AddTags",
		"cloudtrail:CreateTrail",
		"cloudtrail:DeleteTrail",
		"cloudtrail:DescribeTrails",
		"cloudtrail:GetEventSelectors",
		"cloudtrail:GetTrail",
		"cloudtrail:GetTrailStatus",
		"cloudtrail:ListTags",
		"cloudtrail:ListTrails",
		"cloudtrail:StartLogging",
		"ec2:DescribeRegions",
		"iam:AttachRolePolicy",
		"iam:CreatePolicy",
		"iam:CreateRole",
		"iam:DeletePolicy",
		"iam:DeleteRole",
		"iam:DeleteRolePolicy",
		"iam:DetachRolePolicy",
		"iam:GetPolicy",
		"iam:GetPolicyVersion",
		"iam:GetRole",
		"iam:GetRolePolicy",
		"iam:GetUserPolicy",
		"iam:ListAttachedRolePolicies",
		"iam:ListAttachedUserPolicies",
		"iam:ListGroupsForUser",
		"iam:ListInstanceProfilesForRole",
		"iam:ListPolicyVersions",
		"iam:ListRolePolicies",
		"iam:ListUserPolicies",
		"iam:PassRole",
		"iam:PutRolePolicy",
		"iam:TagPolicy",
		"iam:TagRole",
		"kms:CancelKeyDeletion",
		"kms:CreateKey",
		"kms:DeleteAlias",
		"kms:DeleteCustomKeyStore",
		"kms:DeleteImportedKeyMaterial",
		"kms:DescribeCustomKeyStores",
		"kms:DescribeKey",
		"kms:DisableKey",
		"kms:DisableKeyRotation",
		"kms:EnableKey",
		"kms:EnableKeyRotation",
		"kms:GetKeyPolicy",
		"kms:GetKeyRotationStatus",
		"kms:GetParametersForImport",
		"kms:GetPublicKey",
		"kms:ListAliases",
		"kms:ListGrants",
		"kms:ListKeyPolicies",
		"kms:ListKeys",
		"kms:ListResourceTags",
		"kms:ListRetirableGrants",
		"kms:PutKeyPolicy",
		"kms:RevokeGrant",
		"kms:ScheduleKeyDeletion",
		"kms:TagResource",
		"kms:UpdateAlias",
		"kms:UpdateCustomKeyStore",
		"kms:UpdateKeyDescription",
		"kms:UpdatePrimaryRegion",
		"s3:CreateBucket",
		"s3:DeleteBucket",
		"s3:DeleteBucketPolicy",
		"s3:DeleteObject",
		"s3:DeleteObjectVersion",
		"s3:GetAccelerateConfiguration",
		"s3:GetBucketAcl",
		"s3:GetBucketCORS",
		"s3:GetBucketLogging",
		"s3:GetBucketNotification",
		"s3:GetBucketObjectLockConfiguration",
		"s3:GetBucketOwnershipControls",
		"s3:GetBucketPolicy",
		"s3:GetBucketPublicAccessBlock",
		"s3:GetBucketRequestPayment",
		"s3:GetBucketTagging",
		"s3:GetBucketVersioning",
		"s3:GetBucketWebsite",
		"s3:GetEncryptionConfiguration",
		"s3:GetLifecycleConfiguration",
		"s3:GetReplicationConfiguration",
		"s3:ListBucket",
		"s3:ListBucketVersions",
		"s3:PutBucketAcl",
		"s3:PutBucketLogging",
		"s3:PutBucketNotification",
		"s3:PutBucketOwnershipControls",
		"s3:PutBucketPolicy",
		"s3:PutBucketPublicAccessBlock",
		"s3:PutBucketTagging",
		"s3:PutBucketVersioning",
		"s3:PutEncryptionConfiguration",
		"sns:CreateTopic",
		"sns:DeleteTopic",
		"sns:GetSubscriptionAttributes",
		"sns:GetTopicAttributes",
		"sns:ListTagsForResource",
		"sns:SetTopicAttributes",
		"sns:Subscribe",
		"sns:TagResource",
		"sns:Unsubscribe",
		"sqs:CreateQueue",
		"sqs:DeleteQueue",
		"sqs:GetQueueAttributes",
		"sqs:ListQueueTags",
		"sqs:SetQueueAttributes",
		"sqs:TagQueue",
	},
}

var RequiredPermissionsForOrg = map[IntegrationType][]string{
	Agentless: {
		"ec2:AssociateRouteTable",
		"ec2:AttachInternetGateway",
		"ec2:AuthorizeSecurityGroupEgress",
		"ec2:CreateInternetGateway",
		"ec2:CreateRoute",
		"ec2:CreateRouteTable",
		"ec2:CreateSecurityGroup",
		"ec2:CreateSubnet",
		"ec2:CreateTags",
		"ec2:CreateVpc",
		"ec2:DeleteInternetGateway",
		"ec2:DeleteRoute",
		"ec2:DeleteRouteTable",
		"ec2:DeleteSecurityGroup",
		"ec2:DeleteSubnet",
		"ec2:DeleteVpc",
		"ec2:DescribeInternetGateways",
		"ec2:DescribeNetworkAcls",
		"ec2:DescribeNetworkInterfaces",
		"ec2:DescribeRouteTables",
		"ec2:DescribeSecurityGroupRules",
		"ec2:DescribeSecurityGroups",
		"ec2:DescribeSubnets",
		"ec2:DescribeVpcAttribute",
		"ec2:DescribeVpcClassicLink",
		"ec2:DescribeVpcClassicLinkDnsSupport",
		"ec2:DescribeVpcs",
		"ec2:DetachInternetGateway",
		"ec2:DisassociateRouteTable",
		"ec2:ModifyVpcAttribute",
		"ec2:RevokeSecurityGroupEgress",
		"ec2:RevokeSecurityGroupIngress",
		"ecs:CreateCluster",
		"ecs:DeleteCluster",
		"ecs:DeregisterTaskDefinition",
		"ecs:DescribeClusters",
		"ecs:DescribeTaskDefinition",
		"ecs:ListTasks",
		"ecs:PutClusterCapacityProviders",
		"ecs:RegisterTaskDefinition",
		"ecs:StopTask",
		"events:DeleteRule",
		"events:DescribeRule",
		"events:ListTagsForResource",
		"events:ListTargetsByRule",
		"events:PutRule",
		"events:PutTargets",
		"events:RemoveTargets",
		"iam:AttachRolePolicy",
		"iam:CreatePolicy",
		"iam:CreateRole",
		"iam:DeletePolicy",
		"iam:DeleteRole",
		"iam:DeleteRolePolicy",
		"iam:DetachRolePolicy",
		"iam:GetPolicy",
		"iam:GetPolicyVersion",
		"iam:GetRole",
		"iam:GetRolePolicy",
		"iam:GetUserPolicy",
		"iam:ListAttachedRolePolicies",
		"iam:ListAttachedUserPolicies",
		"iam:ListGroupsForUser",
		"iam:ListInstanceProfilesForRole",
		"iam:ListPolicyVersions",
		"iam:ListRolePolicies",
		"iam:ListUserPolicies",
		"iam:PassRole",
		"iam:PutRolePolicy",
		"iam:TagPolicy",
		"iam:TagRole",
		"logs:CreateLogGroup",
		"logs:DeleteLogGroup",
		"logs:DescribeLogGroups",
		"logs:ListTagsLogGroup",
		"logs:PutRetentionPolicy",
		"organizations:DescribeAccount",
		"organizations:DescribeOrganization",
		"organizations:ListAccounts",
		"organizations:ListAWSServiceAccessForOrganization",
		"organizations:ListOrganizationalUnitsForParent",
		"organizations:ListRoots",
		"s3:CreateBucket",
		"s3:DeleteBucket",
		"s3:DeleteBucketPolicy",
		"s3:DeleteObject",
		"s3:DeleteObjectVersion",
		"s3:GetAccelerateConfiguration",
		"s3:GetBucketAcl",
		"s3:GetBucketCORS",
		"s3:GetBucketLogging",
		"s3:GetBucketObjectLockConfiguration",
		"s3:GetBucketOwnershipControls",
		"s3:GetBucketPolicy",
		"s3:GetBucketPublicAccessBlock",
		"s3:GetBucketRequestPayment",
		"s3:GetBucketTagging",
		"s3:GetBucketVersioning",
		"s3:GetBucketWebsite",
		"s3:GetEncryptionConfiguration",
		"s3:GetLifecycleConfiguration",
		"s3:GetReplicationConfiguration",
		"s3:ListBucket",
		"s3:ListBucketVersions",
		"s3:PutBucketOwnershipControls",
		"s3:PutBucketPolicy",
		"s3:PutBucketPublicAccessBlock",
		"s3:PutBucketTagging",
		"s3:PutBucketVersioning",
		"s3:PutEncryptionConfiguration",
		"s3:PutLifecycleConfiguration",
		"secretsmanager:CreateSecret",
		"secretsmanager:DeleteSecret",
		"secretsmanager:DescribeSecret",
		"secretsmanager:GetResourcePolicy",
		"secretsmanager:GetSecretValue",
		"secretsmanager:PutSecretValue",
	},
	Config: {
		"cloudformation:CreateStack",
		"cloudformation:CreateStackInstances",
		"cloudformation:CreateStackSet",
		"cloudformation:DeleteStack",
		"cloudformation:DeleteStackInstances",
		"cloudformation:DeleteStackSet",
		"cloudformation:DescribeStackEvents",
		"cloudformation:DescribeStackInstance",
		"cloudformation:DescribeStacks",
		"cloudformation:DescribeStackSet",
		"cloudformation:DescribeStackSetOperation",
		"cloudformation:GetTemplate",
		"cloudformation:ListStackInstances",
		"iam:AttachRolePolicy",
		"iam:CreateRole",
		"iam:DeleteRole",
		"iam:DeleteRolePolicy",
		"iam:DetachRolePolicy",
		"iam:GetPolicy",
		"iam:GetPolicyVersion",
		"iam:GetRole",
		"iam:GetRolePolicy",
		"iam:GetUserPolicy",
		"iam:ListAttachedRolePolicies",
		"iam:ListAttachedUserPolicies",
		"iam:ListGroupsForUser",
		"iam:ListInstanceProfilesForRole",
		"iam:ListPolicyVersions",
		"iam:ListRolePolicies",
		"iam:ListUserPolicies",
		"iam:PassRole",
		"iam:PutRolePolicy",
		"iam:TagPolicy",
		"iam:TagRole",
		"kms:CancelKeyDeletion",
		"kms:CreateAlias",
		"kms:CreateCustomKeyStore",
		"kms:CreateGrant",
		"kms:CreateKey",
		"kms:DeleteAlias",
		"kms:DeleteCustomKeyStore",
		"kms:DeleteImportedKeyMaterial",
		"kms:DescribeCustomKeyStores",
		"kms:DescribeKey",
		"kms:DisableKey",
		"kms:DisableKeyRotation",
		"kms:EnableKey",
		"kms:EnableKeyRotation",
		"kms:GetKeyPolicy",
		"kms:GetKeyRotationStatus",
		"kms:GetParametersForImport",
		"kms:GetPublicKey",
		"kms:ListAliases",
		"kms:ListGrants",
		"kms:ListKeyPolicies",
		"kms:ListKeys",
		"kms:ListResourceTags",
		"kms:ListRetirableGrants",
		"kms:PutKeyPolicy",
		"kms:RevokeGrant",
		"kms:ScheduleKeyDeletion",
		"kms:TagResource",
		"kms:UpdateAlias",
		"kms:UpdateCustomKeyStore",
		"kms:UpdateKeyDescription",
		"kms:UpdatePrimaryRegion",
		"lambda:AddPermission",
		"lambda:CreateFunction",
		"lambda:DeleteFunction",
		"lambda:GetFunction",
		"lambda:GetFunctionCodeSigningConfig",
		"lambda:GetPolicy",
		"lambda:InvokeFunction",
		"lambda:ListVersionsByFunction",
		"lambda:Removepermission",
		"organizations:DescribeAccount",
		"organizations:DescribeOrganization",
		"organizations:ListAccounts",
		"organizations:ListAWSServiceAccessForOrganization",
		"organizations:ListOrganizationalUnitsForParent",
		"organizations:ListRoots",
		"s3:CreateBucket",
		"s3:DeleteBucket",
		"s3:DeleteBucketPolicy",
		"s3:DeleteBucketWebsite",
		"s3:DeleteObject",
		"s3:DeleteObjectVersion",
		"s3:GetAccelerateConfiguration",
		"s3:GetAccessPoint",
		"s3:GetAccessPointConfigurationForObjectLambda",
		"s3:GetAccessPointForObjectLambda",
		"s3:GetAccessPointForObjectLambda",
		"s3:GetAccessPointPolicy",
		"s3:GetAccessPointPolicyStatus",
		"s3:GetAccessPointPolicyStatusForObjectLambda",
		"s3:GetAccountPublicAccessBlock",
		"s3:GetAnalyticsConfiguration",
		"s3:GetBucketAcl",
		"s3:GetBucketCORS",
		"s3:GetBucketLocation",
		"s3:GetBucketLogging",
		"s3:GetBucketObjectLockConfiguration",
		"s3:GetBucketOwnershipControls",
		"s3:GetBucketPolicy",
		"s3:GetBucketPublicAccessBlock",
		"s3:GetBucketRequestPayment",
		"s3:GetBucketTagging",
		"s3:GetBucketVersioning",
		"s3:GetBucketWebsite",
		"s3:GetEncryptionConfiguration",
		"s3:GetIntelligentTieringConfiguration",
		"s3:GetInventoryConfiguration",
		"s3:GetJobTagging",
		"s3:GetLifecycleConfiguration",
		"s3:GetMetricsConfiguration",
		"s3:GetObject",
		"s3:GetObjectAcl",
		"s3:GetObjectLegalHold",
		"s3:GetObjectRetention",
		"s3:GetObjectTagging",
		"s3:GetObjectTorrent",
		"s3:GetObjectVersion",
		"s3:GetObjectVersionAcl",
		"s3:GetObjectVersionForReplication",
		"s3:GetObjectVersionTagging",
		"s3:GetObjectVersionTorrent",
		"s3:GetReplicationConfiguration",
		"s3:GetStorageLensConfiguration",
		"s3:GetStorageLensConfigurationTagging",
		"s3:GetStorageLensDashboard",
		"s3:ListAccessPoints",
		"s3:ListAccessPointsForObjectLambda",
		"s3:ListAllMyBuckets",
		"s3:ListBucket",
		"s3:ListBucketMultipartUploads",
		"s3:ListBucketVersions",
		"s3:ListJobs",
		"s3:ListMultipartUploadParts",
		"s3:ListStorageLensConfigurations",
		"s3:PutBucketAcl",
		"s3:PutBucketLogging",
		"s3:PutBucketNotification",
		"s3:PutBucketOwnershipControls",
		"s3:PutBucketPolicy",
		"s3:PutBucketPublicAccessBlock",
		"s3:PutBucketVersioning",
		"s3:PutEncryptionConfiguration",
		"secretsmanager:CreateSecret",
		"secretsmanager:DescribeSecret",
		"secretsmanager:GetResourcePolicy",
		"secretsmanager:GetSecretValue",
		"secretsmanager:PutSecretValue",
		"sns:CreateTopic",
		"sns:DeleteTopic",
		"sns:GetSubscriptionAttributes",
		"sns:GetTopicAttributes",
		"sns:ListTagsForResource",
		"sns:SetTopicAttributes",
		"sns:Subscribe",
		"sns:Unsubscribe",
	},
	CloudTrail: {
		"cloudtrail:AddTags",
		"cloudtrail:CreateTrail",
		"cloudtrail:DeleteTrail",
		"cloudtrail:DescribeTrails",
		"cloudtrail:GetEventSelectors",
		"cloudtrail:GetTrailStatus",
		"cloudtrail:ListTags",
		"cloudtrail:StartLogging",
		"iam:AttachRolePolicy",
		"iam:CreatePolicy",
		"iam:CreateRole",
		"iam:CreateServiceLinkedRole",
		"iam:DeletePolicy",
		"iam:DetachRolePolicy",
		"iam:GetPolicy",
		"iam:GetPolicyVersion",
		"iam:GetRole",
		"iam:GetRolePolicy",
		"iam:GetUserPolicy",
		"iam:ListAttachedRolePolicies",
		"iam:ListAttachedUserPolicies",
		"iam:ListGroupsForUser",
		"iam:ListInstanceProfilesForRole",
		"iam:ListPolicyVersions",
		"iam:ListRolePolicies",
		"iam:ListUserPolicies",
		"iam:TagPolicy",
		"iam:TagRole",
		"kms:CancelKeyDeletion",
		"kms:CreateKey",
		"kms:DeleteAlias",
		"kms:DeleteCustomKeyStore",
		"kms:DeleteImportedKeyMaterial",
		"kms:DescribeCustomKeyStores",
		"kms:DescribeKey",
		"kms:DisableKey",
		"kms:DisableKeyRotation",
		"kms:EnableKey",
		"kms:EnableKeyRotation",
		"kms:GetKeyPolicy",
		"kms:GetKeyRotationStatus",
		"kms:GetParametersForImport",
		"kms:GetPublicKey",
		"kms:ListAliases",
		"kms:ListGrants",
		"kms:ListKeyPolicies",
		"kms:ListKeys",
		"kms:ListResourceTags",
		"kms:ListRetirableGrants",
		"kms:PutKeyPolicy",
		"kms:RevokeGrant",
		"kms:ScheduleKeyDeletion",
		"kms:UpdateAlias",
		"kms:UpdateCustomKeyStore",
		"kms:UpdateKeyDescription",
		"kms:UpdatePrimaryRegion",
		"organizations:DescribeAccount",
		"organizations:DescribeOrganization",
		"organizations:ListAccounts",
		"organizations:ListAWSServiceAccessForOrganization",
		"organizations:ListOrganizationalUnitsForParent",
		"organizations:ListRoots",
		"s3:CreateBucket",
		"s3:DeleteBucket",
		"s3:DeleteBucketPolicy",
		"s3:DeleteObject",
		"s3:DeleteObjectVersion",
		"s3:GetAccelerateConfiguration",
		"s3:GetBucketAcl",
		"s3:GetBucketCORS",
		"s3:GetBucketLogging",
		"s3:GetBucketObjectLockConfiguration",
		"s3:GetBucketOwnershipControls",
		"s3:GetBucketPolicy",
		"s3:GetBucketPublicAccessBlock",
		"s3:GetBucketRequestPayment",
		"s3:GetBucketTagging",
		"s3:GetBucketVersioning",
		"s3:GetBucketWebsite",
		"s3:GetEncryptionConfiguration",
		"s3:GetLifecycleConfiguration",
		"s3:GetReplicationConfiguration",
		"s3:ListBucket",
		"s3:ListBucketVersions",
		"s3:PutBucketAcl",
		"s3:PutBucketLogging",
		"s3:PutBucketOwnershipControls",
		"s3:PutBucketPolicy",
		"s3:PutBucketPublicAccessBlock",
		"s3:PutBucketVersioning",
		"s3:PutEncryptionConfiguration",
		"sns:CreateTopic",
		"sns:DeleteTopic",
		"sns:GetSubscriptionAttributes",
		"sns:GetTopicAttributes",
		"sns:ListTagsForResource",
		"sns:SetTopicAttributes",
		"sns:Subscribe",
		"sns:TagResource",
		"sns:Unsubscribe",
		"sqs:CreateQueue",
		"sqs:DeleteQueue",
		"sqs:GetQueueAttributes",
		"sqs:ListQueueTags",
		"sqs:SetQueueAttributes",
		"sqs:TagQueue",
	},
}
