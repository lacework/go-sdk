// Author:: Darren Murray (<dmurray-lacework@lacework.net>)
// Copyright:: Copyright 2021, Lacework Inc.
// License:: Apache License, Version 2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package cmd

import (
	"regexp"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/lacework/go-sdk/api"
)

func TestBuildVulnerabilityException(t *testing.T) {
	vulnExceptionPropertiesTable := buildVulnerabilityExceptionsPropsTable(mockVulnException)
	assert.Equal(t, vulnExceptionPropertiesTable, vulnPropertiesOutput)
}

func TestCVEValidate(t *testing.T) {
	cveRegEx, _ := regexp.Compile(CveRegex)
	alasRegEx, _ := regexp.Compile(AlasRegex)

	cveTableTest := []struct {
		Name     string
		Input    string
		Regex    *regexp.Regexp
		Expected bool
	}{{
		Name:     "CVE Valid",
		Input:    "CVE-2022-28948",
		Regex:    cveRegEx,
		Expected: true,
	}, {
		Name:     "CVE Invalid",
		Input:    "CV-202-28948",
		Regex:    cveRegEx,
		Expected: false,
	}, {
		Name:     "ALAS Valid",
		Input:    "ALAS-2022-1788",
		Regex:    alasRegEx,
		Expected: true,
	}, {
		Name:     "ALAS Valid",
		Input:    "ALAS2-2022-1802",
		Regex:    alasRegEx,
		Expected: true,
	},
		{
			Name:     "ALAS Invalid",
			Input:    "ALA-2022-1788",
			Regex:    alasRegEx,
			Expected: false,
		},
	}
	for _, test := range cveTableTest {
		t.Run(test.Name, func(t *testing.T) {
			result := test.Regex.MatchString(test.Input)
			assert.Equal(t, result, test.Expected)
		})
	}
}

var (
	mockVulnException = api.VulnerabilityException{
		Enabled:         1,
		ExceptionName:   "this was created via cli",
		ExceptionType:   "Host",
		ExceptionReason: "Accepted Risk",
		Props: api.VulnerabilityExceptionProps{
			Description: "this was created via cli",
			UpdatedBy:   "darren.murray@lacework.net",
		},
		VulnerabilityCriteria: api.VulnerabilityExceptionCriteria{
			Package:  []map[string][]string{{"myPackage": []string{"1.2.3"}}},
			Severity: []string{"Critical", "High"},
			Fixable:  []int{0},
		},
		ResourceScope: &api.VulnerabilityExceptionResourceScope{
			Hostname: []string{"testHost"},
		},
		CreatedTime: "2022-01-24T12:03:30.185Z",
		UpdatedTime: "2022-01-24T12:03:30.185Z",
	}

	vulnPropertiesOutput = `          VULNERABILITY EXCEPTION PROPS           
--------------------------------------------------
    DESCRIPTION     this was created via cli      
    UPDATED BY      darren.murray@lacework.net    
    LAST UPDATED    2022-01-24T12:03:30.185Z      
    CREATED         2022-01-24T12:03:30.185Z      
    REASON          Accepted Risk                 
    NAMESPACES                                    
    HOSTNAMES       testHost                      
    EXTERNAL IPS                                  
    CLUSTER NAMES                                 
    FIXABLE         false                         
    CVES                                          
    SEVERITIES      Critical, High                
                                                  
          PACKAGES          
----------------------------
      NAME      VERSIONS    
  ------------+-----------  
    myPackage   1.2.3       
                            
`
)
