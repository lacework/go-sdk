//
// Author:: Salim Afiune Maya (<afiune@lacework.net>)
// Copyright:: Copyright 2021, Lacework Inc.
// License:: Apache License, Version 2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package cmd

import (
	"encoding/json"
	"log"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/lacework/go-sdk/api"
	"github.com/lacework/go-sdk/internal/capturer"
)

func TestBuildVulnContainerAssessmentReportsNoVulnerabilities(t *testing.T) {
	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, buildVulnContainerAssessmentReports(api.VulnerabilitiesContainersResponse{}))
	})
	assert.Contains(t, cliOutput, "Great news! This container image has no vulnerabilities...")

	t.Run("test JSON output", func(t *testing.T) {
		cli.EnableJSONOutput()
		defer cli.EnableHumanOutput()
		cliJSONOutput := capturer.CaptureOutput(func() {
			assert.Nil(t, buildVulnContainerAssessmentReports(api.VulnerabilitiesContainersResponse{}))
		})
		expectedJSON := `{
  "critical_vulnerabilities": 0,
  "fixable_vulnerabilities": 0,
  "high_vulnerabilities": 0,
  "info_vulnerabilities": 0,
  "low_vulnerabilities": 0,
  "medium_vulnerabilities": 0,
  "total_vulnerabilities": 0
}
`
		assert.Equal(t, expectedJSON, cliJSONOutput)
	})
}

func TestBuildVulnContainerAssessmentReportsWithVulnerabilitiesPackagesView(t *testing.T) {
	vulCmdState.Packages = true
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, buildVulnContainerAssessmentReports(mockVulnerabilityAssessment()))
	})
	// NOTE (@afiune): We purposly leave trailing spaces in this table, we need them!
	expectedTable := `
                                  CONTAINER IMAGE DETAILS                                          VULNERABILITIES          
------------------------------------------------------------------------------------------+---------------------------------
    ID          sha256:6446ea57df7b5badfcbdb47cf2d05d7831a33d36a97835b2c061cd1b4cc33deb       SEVERITY   COUNT   FIXABLE    
    Digest      sha256:c933030694d7c95a266f8ba1236711595065b10531dd0df655852bccce96a66e     -----------+-------+----------  
    Registry    index.docker.io                                                               Critical       1         1    
    Repository  techallylw/test-cli-clean                                                     High           2         2    
    Size        2.7 MB                                                                        Medium         1         1    
    Created At  2020-05-29T21:19:46.363Z                                                      Low            0         0    
    Tags        latest                                                                        Info           0         0    
                                                                                                                            
  CVE COUNT   SEVERITY    PACKAGE    CURRENT VERSION   FIX VERSION  
------------+----------+-----------+-----------------+--------------
  1           Critical   apk-tools   2.10.5-r1         2.10.7-r0    
  1           High       apk-tools   2.10.5-r1         2.10.6-r0    
  1           High       busybox     1.31.1-r16        1.31.1-r20   
  1           Medium     musl        1.1.24-r8         1.1.24-r10   
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)
}

func TestBuildVulnContainerAssessmentReportsWithVulnerabilitiesPackagesViewWithFilters(t *testing.T) {
	vulCmdState.Severity = "critical"
	vulCmdState.Packages = true
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, buildVulnContainerAssessmentReports(mockVulnerabilityAssessment()))
	})
	// NOTE (@afiune): We purposely leave trailing spaces in this table, we need them!
	expectedTable := `
                                  CONTAINER IMAGE DETAILS                                          VULNERABILITIES          
------------------------------------------------------------------------------------------+---------------------------------
    ID          sha256:6446ea57df7b5badfcbdb47cf2d05d7831a33d36a97835b2c061cd1b4cc33deb       SEVERITY   COUNT   FIXABLE    
    Digest      sha256:c933030694d7c95a266f8ba1236711595065b10531dd0df655852bccce96a66e     -----------+-------+----------  
    Registry    index.docker.io                                                               Critical       1         1    
    Repository  techallylw/test-cli-clean                                                     High           2         2    
    Size        2.7 MB                                                                        Medium         1         1    
    Created At  2020-05-29T21:19:46.363Z                                                      Low            0         0    
    Tags        latest                                                                        Info           0         0    
                                                                                                                            
  CVE COUNT   SEVERITY    PACKAGE    CURRENT VERSION   FIX VERSION  
------------+----------+-----------+-----------------+--------------
  1           Critical   apk-tools   2.10.5-r1         2.10.7-r0    
1 of 4 packages showing 
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)

	t.Run("test JSON output", func(t *testing.T) {
		cli.EnableJSONOutput()
		defer cli.EnableHumanOutput()
		cliJSONOutput := capturer.CaptureOutput(func() {
			assert.Nil(t, buildVulnContainerAssessmentReports(mockVulnerabilityAssessment()))
		})
		expectedJSON := `{
  "critical_vulnerabilities": 1,
  "fixable_vulnerabilities": 4,
  "high_vulnerabilities": 2,
  "image": {
    "image_info": {
      "created_time": "2020-05-29T21:19:46.363Z",
      "image_digest": "sha256:c933030694d7c95a266f8ba1236711595065b10531dd0df655852bccce96a66e",
      "image_id": "sha256:6446ea57df7b5badfcbdb47cf2d05d7831a33d36a97835b2c061cd1b4cc33deb",
      "registry": "index.docker.io",
      "repository": "techallylw/test-cli-clean",
      "size": 2797541,
      "tags": [
        "latest"
      ]
    },
    "image_layers": [
      {
        "created_by": "ADD file:c92c248239f8c7b9b3c067650954815f391b7bcb09023f984972c082ace2a8d0 in / ",
        "hash": "sha256:sha256:df20fa9351a15782c64e6dddb2d4a6f50bf6d3688060a34c4014b0d9a752eb4c",
        "packages": [
          {
            "name": "apk-tools",
            "namespace": "centos:8",
            "version": "2.10.5-r1",
            "vulnerabilities": [
              {
                "description": "",
                "fix_version": "2.10.7-r0",
                "link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36159",
                "metadata": {
                  "NVD": {
                    "CVSSv2": {
                      "PublishedDateTime": "2021-08-03T14:15Z",
                      "Score": 6.4,
                      "Vectors": "AV:N/AC:L/Au:N/C:P/I:N/A:P"
                    },
                    "CVSSv3": {
                      "ExploitabilityScore": 3.9,
                      "ImpactScore": 5.2,
                      "Score": 9.1,
                      "Vectors": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                    }
                  }
                },
                "name": "CVE-2021-36159",
                "severity": "critical",
                "status": "Vulnerable"
              }
            ]
          }
        ]
      }
    ]
  },
  "info_vulnerabilities": 0,
  "last_evaluation_time": "2021-11-05T12:47:03.886Z",
  "low_vulnerabilities": 0,
  "medium_vulnerabilities": 1,
  "scan_status": "Success",
  "total_vulnerabilities": 4
}
`
		assert.Equal(t, expectedJSON, cliJSONOutput)
	})
}

func mockVulnerabilityAssessment() api.VulnerabilitiesContainersResponse {
	var assessment api.VulnerabilitiesContainersResponse
	err := json.Unmarshal([]byte(`{
    "paging": {
        "rows": 1,
        "totalRows": 1,
        "urls": {
            "nextPage": null
        }
    },
    "data": [
        {
            "evalCtx": {
                "cve_batch_info": [
                    {
                        "cve_created_time": "2022-11-14 00:07:45.736000000"
                    }
                ],
                "image_info": {
                    "created_time": 1588285120631,
                    "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
                    "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
                    "registry": "gcr.io",
                    "repo": "techally-test-123/test",
                    "scan_created_time": 1636768865,
                    "size": 20853835,
                    "status": "Success",
                    "tags": [
                        "v0.1.0-00-abc"
                    ],
                    "type": "Docker"
                },
                "integration_props": {},
                "is_reeval": true,
                "request_source": "PLATFORM_SCANNER",
                "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
                "scan_request_props": {
                    "data_format_version": "1.0",
                    "props": {
                        "data_format_version": "1.0",
                        "scanner_version": "0.1.0"
                    },
                    "scanCompletionUtcTime": 1636768866,
                    "scan_start_time": 1636768865,
                    "scanner_version": "0.2.2"
                },
                "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
                "vuln_created_time": "2022-11-14 00:07:45.736000000"
            },
            "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
            "featureKey": {
                "name": "example",
                "namespace": "alpine:test",
                "version": "1.00.0-r1"
            },
            "featureProps": {
                "feed": "lacework",
                "introduced_in": "example",
                "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
                "src": "",
                "version_format": "apk"
            },
            "fixInfo": {
                "fix_available": 1,
                "fixed_version": "1.20.00-r0"
            },
            "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
            "severity": "Medium",
            "startTime": "2022-11-14T00:20:57.367Z",
            "status": "VULNERABLE",
            "vulnId": "CVE-2021-24215"
        }
    ]
}`), &assessment)
	if err != nil {
		log.Fatal(err)
	}
	return assessment
}
