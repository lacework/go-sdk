//
// Author:: Salim Afiune Maya (<afiune@lacework.net>)
// Copyright:: Copyright 2021, Lacework Inc.
// License:: Apache License, Version 2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package cmd

import (
	"encoding/json"
	"log"
	"strings"
	"testing"

	"github.com/fatih/color"
	"github.com/stretchr/testify/assert"

	"github.com/lacework/go-sdk/api"
	"github.com/lacework/go-sdk/internal/capturer"
)

func TestOutputContainerVulnerabilityAssessmentNoVulnerabilities(t *testing.T) {
	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(api.VulnerabilitiesContainersResponse{}))
	})
	assert.Contains(t, cliOutput, "Great news! This container image has no vulnerabilities...")

	t.Run("test JSON output", func(t *testing.T) {
		cli.EnableJSONOutput()
		defer cli.EnableHumanOutput()
		cliJSONOutput := capturer.CaptureOutput(func() {
			assert.Nil(t, outputContainerVulnerabilityAssessment(api.VulnerabilitiesContainersResponse{}))
		})
		expectedJSON := `[]
`
		assert.Equal(t, expectedJSON, cliJSONOutput)
	})
}

func TestOutputContainerVulnerabilityAssessmentWithVulnerabilitiesPackagesView(t *testing.T) {
	vulCmdState.Packages = true
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
	})
	// NOTE (@afiune): We purposely leave trailing spaces in this table, we need them!
	expectedTable := `                                  CONTAINER IMAGE DETAILS                                           VULNERABILITIES          
-------------------------------------------------------------------------------------------+---------------------------------
    ID          sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc       SEVERITY   COUNT   FIXABLE    
    Digest      sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg       -----------+-------+----------  
    Registry    gcr.io                                                                         Critical       1         1    
    Repository  techally-test-123/test                                                         High           0         0    
    Size        19.9 MB                                                                        Medium         1         1    
    Created At  2020-04-30T22:18:40Z                                                           Low            0         0    
    Tags        v0.1.0-00-abc                                                                  Info           0         0    
                                                                                                                             
  CVE COUNT   SEVERITY    PACKAGE    CURRENT VERSION   FIX VERSION  
------------+----------+-----------+-----------------+--------------
  1           Critical   example-2   1.00.0-r1         1.20.00-r0   
  1           Medium     example     1.00.0-r1         1.20.00-r0   
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)
}

func TestOutputContainerVulnerabilityAssessmentWithSingleCveFilter(t *testing.T) {
	vulCmdState.Cve = "CVE-2021-24215"
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
	})
	expectedTable := `                CVE-2021-24215                
----------------------------------------------
    PACKAGE           example                 
    CURRENT VERSION   1.00.0-r1               
    NAMESPACE         alpine:test             
    SEVERITY          Medium                  
    FEED              lacework                
    SRC                                       
    START TIME        2022-11-14T00:20:57Z    
    VERSION FORMAT    apk                     
    FIX VERSION       1.20.00-r0              
    STATUS            VULNERABLE              
                                              
    INTRODUCED IN LAYERS                      
  ------------------------                    
    example                                   
  ------------------------                    
                                              
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)
}

func TestOutputContainerVulnerabilityAssessmentWithSingleCveFilterPackages(t *testing.T) {
	vulCmdState.Cve = "CVE-2021-24215"
	vulCmdState.Packages = true
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
	})
	expectedTable := `                CVE-2021-24215                
----------------------------------------------
    PACKAGE           example                 
    CURRENT VERSION   1.00.0-r1               
    NAMESPACE         alpine:test             
    SEVERITY          Medium                  
    FEED              lacework                
    SRC                                       
    START TIME        2022-11-14T00:20:57Z    
    VERSION FORMAT    apk                     
    FIX VERSION       1.20.00-r0              
    STATUS            VULNERABLE              
                                              
    INTRODUCED IN LAYERS                      
  ------------------------                    
    example                                   
  ------------------------                    
                                              
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)
}

func TestOutputContainerVulnerabilityAssessmentWithSingleCveMultipleResults(t *testing.T) {
	vulCmdState.Cve = "CVE-2021-24215"
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessmentSameCves()))
	})
	expectedTable := `                CVE-2021-24215                
----------------------------------------------
    PACKAGE           example-2               
    CURRENT VERSION   1.00.0-r1               
    NAMESPACE         alpine:test             
    SEVERITY          Critical                
    FEED              lacework                
    SRC                                       
    START TIME        2022-11-14T00:20:57Z    
    VERSION FORMAT    apk                     
    FIX VERSION       1.20.00-r0              
    STATUS            VULNERABLE              
                                              
    INTRODUCED IN LAYERS                      
  ------------------------                    
    example introduced                        
  ------------------------                    
    PACKAGE           example                 
    CURRENT VERSION   1.00.0-r1               
    NAMESPACE         alpine:test             
    SEVERITY          Medium                  
    FEED              lacework                
    SRC                                       
    START TIME        2022-11-14T00:20:57Z    
    VERSION FORMAT    apk                     
    FIX VERSION       1.20.00-r0              
    STATUS            VULNERABLE              
                                              
    INTRODUCED IN LAYERS                      
  ------------------------                    
    example                                   
  ------------------------                    
                                              
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)
}

func TestOutputContainerVulnerabilityAssessmentWhenCveNotFound(t *testing.T) {
	vulCmdState.Cve = "CVE-Not-Found"
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
	})

	assert.Equal(t, "Unable to find results for 'CVE-Not-Found'\n", cliOutput)

	t.Run("test JSON output", func(t *testing.T) {
		cli.EnableJSONOutput()
		defer clearVulnFilters()
		cliOutput := capturer.CaptureOutput(func() {
			assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
		})
		out := strings.TrimSpace(cliOutput)
		assert.Equal(t, "[]", out)
	})
}

func TestOutputContainerVulnerabilityAssessmentWithNoAssessmentData(t *testing.T) {
	vulCmdState.Cve = "CVE-2021-24215"
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(api.VulnerabilitiesContainersResponse{}))
	})

	assert.Contains(t, cliOutput, "Great news! This container image has no vulnerabilities...")

	t.Run("test JSON output", func(t *testing.T) {
		cli.EnableJSONOutput()
		defer clearVulnFilters()
		cliOutput := capturer.CaptureOutput(func() {
			assert.Nil(t, outputContainerVulnerabilityAssessment(api.VulnerabilitiesContainersResponse{}))
		})
		out := strings.TrimSpace(cliOutput)
		assert.Equal(t, "[]", out)
	})
}

func TestOutputContainerVulnerabilityAssessmentWithSingleCveFilterJson(t *testing.T) {
	vulCmdState.Cve = "CVE-2021-24215"
	cli.EnableJSONOutput()
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
	})

	expectedJson := `[
  {
    "evalCtx": {
      "cve_batch_info": [
        {
          "cve_batch_id": "",
          "cve_created_time": "2022-11-14 00:07:45.736000000"
        }
      ],
      "exception_props": null,
      "image_info": {
        "created_time": 1588285120631,
        "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
        "error_msg": null,
        "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
        "registry": "gcr.io",
        "repo": "techally-test-123/test",
        "size": 20853835,
        "status": "Success",
        "tags": [
          "v0.1.0-00-abc"
        ],
        "type": "Docker"
      },
      "isDailyJob": "",
      "is_reeval": true,
      "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
      "scan_created_time": "",
      "scan_request_props": {
        "data_format_version": "1.0",
        "environment": {
          "docker_version": {
            "error_message": ""
          }
        },
        "props": {
          "data_format_version": "1.0",
          "scanner_version": "0.1.0"
        },
        "scanCompletionUtcTime": 1636768866,
        "scan_start_time": 1636768865,
        "scanner_version": "0.2.2"
      },
      "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
      "vuln_created_time": "2022-11-14 00:07:45.736000000"
    },
    "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
    "featureKey": {
      "name": "example",
      "namespace": "alpine:test",
      "version": "1.00.0-r1"
    },
    "featureProps": {
      "feed": "lacework",
      "introduced_in": "example",
      "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
      "src": "",
      "version_format": "apk"
    },
    "fixInfo": {
      "compare_result": 0,
      "fix_available": 1,
      "fixed_version": "1.20.00-r0"
    },
    "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
    "severity": "Medium",
    "startTime": "2022-11-14T00:20:57.367Z",
    "status": "VULNERABLE",
    "vulnId": "CVE-2021-24215"
  }
]`
	out := strings.TrimSpace(cliOutput)
	assert.Equal(t, expectedJson, out)
}

func TestOutputContainerVulnerabilityAssessmentWithVulnerabilitiesWithoutCritical(t *testing.T) {
	vulCmdState.Severity = "critical"
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessmentWithoutCriticalSeverity()))
	})
	// NOTE (@afiune): We purposely leave trailing spaces in this table, we need them!
	assert.Equal(t, "There are no vulnerabilities found for this severity\n", cliOutput)
}

func TestOutputContainerVulnerabilityAssessmentWithVulnerabilitiesPackagesViewWithFilters(t *testing.T) {
	vulCmdState.Severity = "critical"
	vulCmdState.Packages = true
	defer clearVulnFilters()

	cliOutput := capturer.CaptureOutput(func() {
		assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
	})
	// NOTE (@afiune): We purposely leave trailing spaces in this table, we need them!
	expectedTable := `
                                  CONTAINER IMAGE DETAILS                                           VULNERABILITIES          
-------------------------------------------------------------------------------------------+---------------------------------
    ID          sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc       SEVERITY   COUNT   FIXABLE    
    Digest      sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg       -----------+-------+----------  
    Registry    gcr.io                                                                         Critical       1         1    
    Repository  techally-test-123/test                                                         High           0         0    
    Size        19.9 MB                                                                        Medium         1         1    
    Created At  2020-04-30T22:18:40Z                                                           Low            0         0    
    Tags        v0.1.0-00-abc                                                                  Info           0         0    
                                                                                                                             
  CVE COUNT   SEVERITY    PACKAGE    CURRENT VERSION   FIX VERSION  
------------+----------+-----------+-----------------+--------------
  1           Critical   example-2   1.00.0-r1         1.20.00-r0   
1 of 2 packages showing 
`
	assert.Equal(t, strings.TrimPrefix(expectedTable, "\n"), cliOutput)

	t.Run("test JSON output", func(t *testing.T) {
		cli.EnableJSONOutput()
		defer cli.EnableHumanOutput()
		cliJSONOutput := capturer.CaptureOutput(func() {
			assert.Nil(t, outputContainerVulnerabilityAssessment(mockVulnerabilityAssessment()))
		})
		// remove pretty print tags
		color.NoColor = true

		expectedJSON := `[
  {
    "evalCtx": {
      "cve_batch_info": [
        {
          "cve_batch_id": "",
          "cve_created_time": "2022-11-14 00:07:45.736000000"
        }
      ],
      "exception_props": null,
      "image_info": {
        "created_time": 1588285120631,
        "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
        "error_msg": null,
        "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
        "registry": "gcr.io",
        "repo": "techally-test-123/test",
        "size": 20853835,
        "status": "Success",
        "tags": [
          "v0.1.0-00-abc"
        ],
        "type": "Docker"
      },
      "isDailyJob": "",
      "is_reeval": true,
      "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
      "scan_created_time": "",
      "scan_request_props": {
        "data_format_version": "1.0",
        "environment": {
          "docker_version": {
            "error_message": ""
          }
        },
        "props": {
          "data_format_version": "1.0",
          "scanner_version": "0.1.0"
        },
        "scanCompletionUtcTime": 1636768866,
        "scan_start_time": 1636768865,
        "scanner_version": "0.2.2"
      },
      "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
      "vuln_created_time": "2022-11-14 00:07:45.736000000"
    },
    "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
    "featureKey": {
      "name": "example-2",
      "namespace": "alpine:test",
      "version": "1.00.0-r1"
    },
    "featureProps": {
      "feed": "lacework",
      "introduced_in": "example introduced",
      "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
      "src": "",
      "version_format": "apk"
    },
    "fixInfo": {
      "compare_result": 0,
      "fix_available": 1,
      "fixed_version": "1.20.00-r0"
    },
    "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
    "severity": "Critical",
    "startTime": "2022-11-14T00:20:57.367Z",
    "status": "VULNERABLE",
    "vulnId": "CVE-2020-24215"
  }
]
`
		assert.Equal(t, expectedJSON, cliJSONOutput)
	})
}
func mockVulnerabilityAssessmentWithoutCriticalSeverity() api.VulnerabilitiesContainersResponse {
	var assessment api.VulnerabilitiesContainersResponse
	err := json.Unmarshal([]byte(`{
    "paging": {
        "rows": 1,
        "totalRows": 1,
        "urls": {
            "nextPage": null
        }
    },
    "data": [
        {
            "evalCtx": {
                "cve_batch_info": [
                    {
                        "cve_created_time": "2022-11-14 00:07:45.736000000"
                    }
                ],
                "image_info": {
                    "created_time": 1588285120631,
                    "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
                    "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
                    "registry": "gcr.io",
                    "repo": "techally-test-123/test",
                    "scan_created_time": 1636768865,
                    "size": 20853835,
                    "status": "Success",
                    "tags": [
                        "v0.1.0-00-abc"
                    ],
                    "type": "Docker"
                },
                "integration_props": {},
                "is_reeval": true,
                "request_source": "PLATFORM_SCANNER",
                "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
                "scan_request_props": {
                    "data_format_version": "1.0",
                    "props": {
                        "data_format_version": "1.0",
                        "scanner_version": "0.1.0"
                    },
                    "scanCompletionUtcTime": 1636768866,
                    "scan_start_time": 1636768865,
                    "scanner_version": "0.2.2"
                },
                "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
                "vuln_created_time": "2022-11-14 00:07:45.736000000"
            },
            "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
            "featureKey": {
                "name": "example",
                "namespace": "alpine:test",
                "version": "1.00.0-r1"
            },
            "featureProps": {
                "feed": "lacework",
                "introduced_in": "example",
                "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
                "src": "",
                "version_format": "apk"
            },
            "fixInfo": {
                "fix_available": 1,
                "fixed_version": "1.20.00-r0"
            },
            "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
            "severity": "Medium",
            "startTime": "2022-11-14T00:20:57.367Z",
            "status": "VULNERABLE",
            "vulnId": "CVE-2021-24215"
        }
    ]
}`), &assessment)
	if err != nil {
		log.Fatal(err)
	}
	return assessment
}

func mockVulnerabilityAssessment() api.VulnerabilitiesContainersResponse {
	var assessment api.VulnerabilitiesContainersResponse
	err := json.Unmarshal([]byte(`{
    "paging": {
        "rows": 1,
        "totalRows": 1,
        "urls": {
            "nextPage": null
        }
    },
    "data": [
        {
            "evalCtx": {
                "cve_batch_info": [
                    {
                        "cve_created_time": "2022-11-14 00:07:45.736000000"
                    }
                ],
                "image_info": {
                    "created_time": 1588285120631,
                    "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
                    "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
                    "registry": "gcr.io",
                    "repo": "techally-test-123/test",
                    "scan_created_time": 1636768865,
                    "size": 20853835,
                    "status": "Success",
                    "tags": [
                        "v0.1.0-00-abc"
                    ],
                    "type": "Docker"
                },
                "integration_props": {},
                "is_reeval": true,
                "request_source": "PLATFORM_SCANNER",
                "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
                "scan_request_props": {
                    "data_format_version": "1.0",
                    "props": {
                        "data_format_version": "1.0",
                        "scanner_version": "0.1.0"
                    },
                    "scanCompletionUtcTime": 1636768866,
                    "scan_start_time": 1636768865,
                    "scanner_version": "0.2.2"
                },
                "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
                "vuln_created_time": "2022-11-14 00:07:45.736000000"
            },
            "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
            "featureKey": {
                "name": "example",
                "namespace": "alpine:test",
                "version": "1.00.0-r1"
            },
            "featureProps": {
                "feed": "lacework",
                "introduced_in": "example",
                "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
                "src": "",
                "version_format": "apk"
            },
            "fixInfo": {
                "fix_available": 1,
                "fixed_version": "1.20.00-r0"
            },
            "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
            "severity": "Medium",
            "startTime": "2022-11-14T00:20:57.367Z",
            "status": "VULNERABLE",
            "vulnId": "CVE-2021-24215"
        },
        {
            "evalCtx": {
                "cve_batch_info": [
                    {
                        "cve_created_time": "2022-11-14 00:07:45.736000000"
                    }
                ],
                "image_info": {
                    "created_time": 1588285120631,
                    "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
                    "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
                    "registry": "gcr.io",
                    "repo": "techally-test-123/test",
                    "scan_created_time": 1636768865,
                    "size": 20853835,
                    "status": "Success",
                    "tags": [
                        "v0.1.0-00-abc"
                    ],
                    "type": "Docker"
                },
                "integration_props": {},
                "is_reeval": true,
                "request_source": "PLATFORM_SCANNER",
                "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
                "scan_request_props": {
                    "data_format_version": "1.0",
                    "props": {
                        "data_format_version": "1.0",
                        "scanner_version": "0.1.0"
                    },
                    "scanCompletionUtcTime": 1636768866,
                    "scan_start_time": 1636768865,
                    "scanner_version": "0.2.2"
                },
                "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
                "vuln_created_time": "2022-11-14 00:07:45.736000000"
            },
            "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
            "featureKey": {
                "name": "example-2",
                "namespace": "alpine:test",
                "version": "1.00.0-r1"
            },
            "featureProps": {
                "feed": "lacework",
                "introduced_in": "example introduced",
                "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
                "src": "",
                "version_format": "apk"
            },
            "fixInfo": {
                "fix_available": 1,
                "fixed_version": "1.20.00-r0"
            },
            "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
            "severity": "Critical",
            "startTime": "2022-11-14T00:20:57.367Z",
            "status": "VULNERABLE",
            "vulnId": "CVE-2020-24215"
        }
    ]
}`), &assessment)
	if err != nil {
		log.Fatal(err)
	}
	return assessment
}

func mockVulnerabilityAssessmentSameCves() api.VulnerabilitiesContainersResponse {
	var assessment api.VulnerabilitiesContainersResponse
	err := json.Unmarshal([]byte(`{
    "paging": {
        "rows": 1,
        "totalRows": 1,
        "urls": {
            "nextPage": null
        }
    },
    "data": [
        {
            "evalCtx": {
                "cve_batch_info": [
                    {
                        "cve_created_time": "2022-11-14 00:07:45.736000000"
                    }
                ],
                "image_info": {
                    "created_time": 1588285120631,
                    "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
                    "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
                    "registry": "gcr.io",
                    "repo": "techally-test-123/test",
                    "scan_created_time": 1636768865,
                    "size": 20853835,
                    "status": "Success",
                    "tags": [
                        "v0.1.0-00-abc"
                    ],
                    "type": "Docker"
                },
                "integration_props": {},
                "is_reeval": true,
                "request_source": "PLATFORM_SCANNER",
                "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
                "scan_request_props": {
                    "data_format_version": "1.0",
                    "props": {
                        "data_format_version": "1.0",
                        "scanner_version": "0.1.0"
                    },
                    "scanCompletionUtcTime": 1636768866,
                    "scan_start_time": 1636768865,
                    "scanner_version": "0.2.2"
                },
                "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
                "vuln_created_time": "2022-11-14 00:07:45.736000000"
            },
            "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
            "featureKey": {
                "name": "example",
                "namespace": "alpine:test",
                "version": "1.00.0-r1"
            },
            "featureProps": {
                "feed": "lacework",
                "introduced_in": "example",
                "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
                "src": "",
                "version_format": "apk"
            },
            "fixInfo": {
                "fix_available": 1,
                "fixed_version": "1.20.00-r0"
            },
            "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
            "severity": "Medium",
            "startTime": "2022-11-14T00:20:57.367Z",
            "status": "VULNERABLE",
            "vulnId": "CVE-2021-24215"
        },
        {
            "evalCtx": {
                "cve_batch_info": [
                    {
                        "cve_created_time": "2022-11-14 00:07:45.736000000"
                    }
                ],
                "image_info": {
                    "created_time": 1588285120631,
                    "digest": "sha256:1234ab1cd12345ab91d8cf9848682b12c5ce64c208e8f796542410d1abcderg",
                    "id": "sha256:123d12a1238613e123456ab1c1141441e6850dbab1416abcd7d675cfb34412abc",
                    "registry": "gcr.io",
                    "repo": "techally-test-123/test",
                    "scan_created_time": 1636768865,
                    "size": 20853835,
                    "status": "Success",
                    "tags": [
                        "v0.1.0-00-abc"
                    ],
                    "type": "Docker"
                },
                "integration_props": {},
                "is_reeval": true,
                "request_source": "PLATFORM_SCANNER",
                "scan_batch_id": "a1234546-a6a3-4509-a1e9-123283a1020e-1636768866551654123",
                "scan_request_props": {
                    "data_format_version": "1.0",
                    "props": {
                        "data_format_version": "1.0",
                        "scanner_version": "0.1.0"
                    },
                    "scanCompletionUtcTime": 1636768866,
                    "scan_start_time": 1636768865,
                    "scanner_version": "0.2.2"
                },
                "vuln_batch_id": "ABCD1A1234AB123A1AB12AB1BD867B123",
                "vuln_created_time": "2022-11-14 00:07:45.736000000"
            },
            "evalGuid": "0a1234567891a1230f2a12a0a12b12ab",
            "featureKey": {
                "name": "example-2",
                "namespace": "alpine:test",
                "version": "1.00.0-r1"
            },
            "featureProps": {
                "feed": "lacework",
                "introduced_in": "example introduced",
                "layer": "sha256:sha256:1234d8c89e19b4b4abcdd4af13d64150ba3d482445d820ae1f6ba71ed6812345",
                "src": "",
                "version_format": "apk"
            },
            "fixInfo": {
                "fix_available": 1,
                "fixed_version": "1.20.00-r0"
            },
            "imageId": "sha256:123d67f5861237689554fa4a2121441e1230dbab9416fccd7d675cfb34476abcd",
            "severity": "Critical",
            "startTime": "2022-11-14T00:20:57.367Z",
            "status": "VULNERABLE",
            "vulnId": "CVE-2021-24215"
        }
    ]
}`), &assessment)
	if err != nil {
		log.Fatal(err)
	}
	return assessment
}
