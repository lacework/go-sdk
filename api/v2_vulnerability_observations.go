package api

const TimestampLayout = "2006-01-02 15:04:05.000 Z"

type v2VulnerabilityObservationsService struct {
	client       *Client
	ImageSummary *v2VulnerabilityObservationImageSummaryService
}

func NewV2VulnerabilityObservationsService(c *Client) *v2VulnerabilityObservationsService {
	return &v2VulnerabilityObservationsService{c,
		&v2VulnerabilityObservationImageSummaryService{c},
	}
}

type v2VulnerabilityObservationImageSummaryService struct {
	client *Client
}

func (svc *v2VulnerabilityObservationImageSummaryService) Search(filters SearchFilter) (
	response VulnerabilityObservationsImageSummaryResponse, err error,
) {
	err = svc.client.RequestEncoderDecoder(
		"POST", apiV2VulnerabilityObservationsImageSummarySearch,
		filters, &response,
	)
	return
}

func (svc *v2VulnerabilityObservationImageSummaryService) SearchAllPages(filters SearchFilter) (
	response VulnerabilityObservationsImageSummaryResponse, err error,
) {
	response, err = svc.Search(filters)
	if err != nil {
		return
	}

	var (
		all    []VulnerabilityObservationsImageSummary
		pageOk bool
	)
	for {
		all = append(all, response.Data...)

		pageOk, err = svc.client.NextPage(&response)
		if err == nil && pageOk {
			continue
		}
		break
	}

	response.ResetPaging()
	response.Data = all
	return
}

type VulnerabilityObservationsImageSummaryResponse struct {
	Data   []VulnerabilityObservationsImageSummary `json:"data"`
	Paging V2Pagination                            `json:"paging"`

	v2PageMetadata `json:"-"`
}

type VulnerabilityObservationsImageSummary struct {
	ContainerCount           int    `json:"containerCount"`
	Digest                   string `json:"digest"`
	ImageId                  string `json:"imageId"`
	LastScanTime             string `json:"lastScanTime"`
	Registry                 string `json:"registry"`
	Repository               string `json:"repository"`
	Tag                      string `json:"tag"`
	ScanStatus               string `json:"scanStatus"`
	VulnCountCritical        int    `json:"vulnCountCritical"`
	VulnCountCriticalFixable int    `json:"vulnCountCriticalFixable"`
	VulnCountHigh            int    `json:"vulnCountHigh"`
	VulnCountHighFixable     int    `json:"vulnCountHighFixable"`
	VulnCountMedium          int    `json:"vulnCountMedium"`
	VulnCountMediumFixable   int    `json:"vulnCountMediumFixable"`
	VulnCountLow             int    `json:"vulnCountLow"`
	VulnCountLowFixable      int    `json:"vulnCountLowFixable"`
	VulnCountInfo            int    `json:"vulnCountInfo"`
	VulnCountInfoFixable     int    `json:"vulnCountInfoFixable"`
}

func (r VulnerabilityObservationsImageSummaryResponse) PageInfo() *V2Pagination {
	return &r.Paging
}
func (r *VulnerabilityObservationsImageSummaryResponse) ResetPaging() {
	r.Paging = V2Pagination{}
	r.Data = nil
}
